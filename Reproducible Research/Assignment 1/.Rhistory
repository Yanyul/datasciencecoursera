swirl()
swirl()
swirl()
swirl()
library(swirl)
swirl()
head()
head("EPA")
head(pollution)
dim(pollution)
library(swirl)
swirl()
2
end()
bye()
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
nxt()
bye()
swirl()
bye()
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(pollution)
skip()
abline(ppm, h = 12)
abline(h = 12)
hist(ppm, col = 'green')
rug(ppm)
low
high
hist(ppm, col = 'green', breaks = 100)
rug(ppm)
hist(ppm, col = 'green')
ablint(v = 12, 1wd = 2)
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- table(pullution$region)
reg <- table(pollution$region)
reg
barplot(reg, col = 'wheat')
barplot(reg, col = 'wheat', main = "Number of Counties in Each Region")
boxplot(pullution, col = 'red')
boxplot(pollution, col = 'red')
skip()
par(mfrow=c(2,1), mar=c(4,4,2,1))
subset(pollution)
ease <- subset(pollution, region == "east")
east <- subset(pollution, region =="east")
head(east)
hist(east$pm25, col = 'green')
hist(subset(pollution, resion == "east"), col = 'green')
hist(subset(pollution, region == "east"), col = 'green')
skip()
skip()
play()
plot(pollution, latitude, pm25)
nxt()
abline(v = 12, lwd = 2, lty = 2)
abline(h =12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow(c(1,2), mar = c(5,4,2,1)))
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
skip()
skip()
skip()
?device
?Devices
plot(dataset)
skip()
play()
with(faithful, plot(eruptions, waiting))
nxt()
skip()
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur("myplot.pdf")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
library(swirl)
swirl()
head(cars)
with(cars, plot(spped, dist))
with(cars, plot(speed, dist))
skip()
play()
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
text(lll,lllll,"ff")
nxt()
head(state)
table(state$region)
skip()4
skip()
play()
xyplot(Life.Exp ~ Income | region, data = state, layout = c(1, 4))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
nxt()
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
play()
bwplot(Life.Exp ~ Income | region, data = state, layout = c(1, 4))
bwplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
nxt()
head(mgp)
head(hpg)
head(mpg)
dim(mpg)
table(mpg$model)
qplot(mpg$displ, mpg$hwy, data = mpg)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone(ppb)")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
main("Ozone and Wind in New York City")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(wind, Ozone))
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par)
length(par())
par()
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
with(set = "n", plot(airquality$Wind, airquality$Ozone)
with(n, plot(airquality$Wind, airquality$Ozone)
plot(airquality$Wind, airquality$Ozone, set = "n")
plot(airquality$Wind, type="n",airquality$Ozone)
title(main = "Wind and Ozone")
title(main="Wind and Ozone in NYC")
may <- subset(airquality, Month = "5")
may <- subset(airquality, Month==5)
points(may, Wind, Ozone)
skip()
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month <> 5)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind, notmay$Ozone,col = "red",pch=17)
points(notmay$Wind, notmay$Ozone,col = "red",pch=8)
legend("topright", c(17,8),c("blue","red"), c("May","Other Months"))
legend("topright", pch = c(17,8), col = c("blue","red"), legend = c("May","Other Months"))
ablines(v = median(airquality$Wind, lty = 2, lwd = 2))
abline(v = median(airquality$Wind, lty = 2, lwd = 2))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow = c(1,2))
plot(airquality$Wind,airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = (c(4,4,2,1), oma = c(0,0,2,0)))
par(mfrow = c(1, 3), mar =
| c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind,airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp), airquality$Ozone, main = "Ozone and Temperature")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(swril)
library(swirl)
swirl()
library(swril)
library(swirl)
swirl()
skip()
xyplot.formula(price ~ carat | color * cut, data = diamonds
swirl()
skip()
swirl()
ddd
xyplot()
nxt()
skip()
nxt()
swirl()
nxt()
nxt()
xyplot((price ~ carat | color * cut, data = diamonds)
xyplot((price ~ carat | color, data = diamonds)
xyplot(price ~ carat | color, data = diamonds)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
nxt()
skip()
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub[,-c(562,563)]))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[10:12],maxCon)
mdist <- dist(sub1[c[10:12],maxCon])
mdist <- dist(c(sub1[10:12],maxCon))
mdist
mdist <- dist(sub1[,c(10:12,maxCon)])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
pollution
names(sub1[maxCon])
kmeans(sub1, centers = 6)
kmeans(sub1[,-c(562,563)], centers = 6)
kClust <- kmeans(sub1[, -c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying, 1:12], pch = 19, ylaab = "Laying Cluster")
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
which(kClust$size == 29)
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
head(ssd)
swirl()
head(activity)
library(ggplot2)
library(tidyverse)
activity <- read.table(unz("activity.zip", "activity.csv"), header = TRUE, sep=",", stringsAsFactors = FALSE)
StepsByday <- activity %>% group_by(date) %>% summarise(total = sum(steps, na.rm = TRUE))
mean_steps <- mean(StepsByday$total)
median_steps <- median(StepsByday$total)
mean_steps
median_steps
g <- ggplot(StepsByday, aes(x = total))
g + geom_histogram(fill = "sky blue", binwidth = 3000, colour = "#000000") + labs(title = "Steps taken per day", x = "Steps", y = "Frequency")
mean_steps <- mean(StepsByday$total)
median_steps <- median(StepsByday$total)
mean_steps
median_steps
head(activity)
head(activity, 10)
StepsByIntervals <- activity %>% group_by(interval) %>% summarise(sum(steps), is.na = TRUE)
StepsByIntervals <- activity %>% group_by(interval) %>% summarise(mean(steps), is.na = TRUE)
StepsByIntervals <- activity %>% group_by(interval) %>% summarise(mean = mean(steps), is.na = TRUE)
g <- ggplot(StepsByIntervals, aes(x = interval, y = mean))
g + geom_line()
head(StepsByIntervals)
StepsByIntervals <- activity %>% group_by(interval) %>% summarise(mean = mean(steps), na.rm = TRUE)
g <- ggplot(StepsByIntervals, aes(x = interval, y = mean))
g + geom_line()
head(StepsByIntervals)
StepsByIntervals <- activity %>% group_by(interval) %>% summarise(mean = mean(steps, na.rm = TRUE))
g <- ggplot(StepsByIntervals, aes(x = interval, y = mean))
g + geom_line()
StepsByIntervals <- activity %>% group_by(interval) %>% summarise(mean = mean(steps, na.rm = TRUE))
g <- ggplot(StepsByIntervals, aes(x = interval, y = mean))
g + geom_line() + labs(title = "Average number of steps taken by 5 min intervals", x = "Intervals(5min)", y = "Average steps taken")
which.max(StepsByIntervals$mean)
which.max(StepsByIntervals$mean,1)
maxsteps <- StepsByIntervals[which.max(StepsByIntervals$mean),1]
maxsteps
sum(is.na(activity$steps))
activity_new <- activity
activity_new$steps[is.na(activity_new$steps)] <-mean_steps/288
StepsByday_r <- activity_new %>% group_by(date) %>% summarise(total = sum(steps))
StepsByday_r <- activity_new %>% group_by(date) %>% summarise(total = sum(steps))
g <- ggplot(StepsByday_r, aes(date, total))
g + geom_histogram()
StepsByday_r <- activity_new %>% group_by(date) %>% summarise(total = sum(steps))
g <- ggplot(StepsByday_r, aes(total))
g + geom_histogram()
g <- ggplot(StepsByday, aes(x = total))
g + geom_histogram(binwidth = 3000, colour = "#000000") + labs(title = "Steps taken per day", x = "Steps", y = "Frequency")
StepsByday_r <- activity_new %>% group_by(date) %>% summarise(total = sum(steps))
g <- ggplot(StepsByday_r, aes(total))
g + geom_histogram(binwidth = 3000) + labs(title = "Total number of steps taken each day", x = "Steps", y = "Frequency")
StepsByday_r <- activity_new %>% group_by(date) %>% summarise(total = sum(steps))
g <- ggplot(StepsByday_r, aes(total))
g + geom_histogram(binwidth = 3000, colour = "#000000") + labs(title = "Total number of steps taken each day", x = "Steps", y = "Frequency")
mean_steps <- mean(StepsByday$total)
median_steps <- median(StepsByday$total)
mean_steps
median_steps
head(activity_new)
activity_new$dateType <-  ifelse(as.POSIXlt(activity_new$date)$wday %in% c(0,6), 'weekend', 'weekday')
activity_weekcom <- activity_new %>% group_by(interval, dateType) %>% summarise(mean = mean(steps))
activity_weekcom <- activity_new %>% group_by(interval, dateType) %>% summarise(mean = mean(steps))
g <- ggplot(activity_weekcom, aes(interval, steps))
g + geom_line(aes(col = dateType))
activity_weekcom <- activity_new %>% group_by(interval, dateType) %>% summarise(mean = mean(steps))
g <- ggplot(activity_weekcom, aes(interval, mean))
g + geom_line(aes(col = dateType))
activity_weekcom <- activity_new %>% group_by(interval, dateType) %>% summarise(mean = mean(steps))
g <- ggplot(activity_weekcom, aes(interval, mean))
g + geom_line(aes(col = dateType)) + labs(title = "Total number of steps taken per day", x = "Interval", y = "Average steps")
activity_weekcom <- activity_new %>% group_by(interval, dateType) %>% summarise(mean = mean(steps))
g <- ggplot(activity_weekcom, aes(interval, mean))
g + geom_line(aes(col = dateType)) + labs(title = "Total number of steps taken per day", x = "Interval", y = "Average steps") + scale_colour_discrete(name  = "Date Type")
getwd(0)
getwd()
setwd("D:/DATA/coursera/Data Scientist/datasciencecoursera/Reproducible Research/RepData_PeerAssessment1")
knit2html()
library(knitr)
install.packages("knitr")
library(knitr)
knit2html()
knit2html()
